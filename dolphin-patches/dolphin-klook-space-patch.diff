diff --git a/dolphin/src/dolphinmainwindow.cpp b/dolphin/src/dolphinmainwindow.cpp
index d83c9de..63d7d68 100644
--- a/dolphin/src/dolphinmainwindow.cpp
+++ b/dolphin/src/dolphinmainwindow.cpp
@@ -85,6 +85,8 @@
 #include <QClipboard>
 #include <QToolButton>
 #include <QSplitter>
+#include <QProcess>
+#include <QApplication>
 
 namespace {
     // Used for GeneralSettings::version() to determine whether
@@ -118,7 +120,8 @@ DolphinMainWindow::DolphinMainWindow() :
     m_settingsDialog(),
     m_controlButton(0),
     m_updateToolBarTimer(0),
-    m_lastHandleUrlStatJob(0)
+    m_lastHandleUrlStatJob(0),
+    m_isFocusOnTerminal(false)
 {
     // Workaround for a X11-issue in combination with KModifierInfo
     // (see DolphinContextMenu::initializeModifierKeyInfo() for
@@ -236,6 +239,8 @@ DolphinMainWindow::DolphinMainWindow() :
     if (!showMenu) {
         createControlButton();
     }
+
+    connect (qApp, SIGNAL(focusChanged(QWidget*,QWidget*)), this, SLOT(focusChanged(QWidget*,QWidget*)));
 }
 
 DolphinMainWindow::~DolphinMainWindow()
@@ -400,6 +405,15 @@ void DolphinMainWindow::slotSelectionChanged(const KFileItemList& selection)
         compareFilesAction->setEnabled(false);
     }
 
+
+    //KLook
+    QAction* openInKLook = actionCollection()->action("open_in_KLook");
+    if ((selectedUrlsCount > 0) && (!m_isFocusOnTerminal)){
+        openInKLook->setEnabled(true);
+    } else {
+        openInKLook->setEnabled(false);
+    }
+
     emit selectionChanged(selection);
 }
 
@@ -1651,6 +1665,14 @@ void DolphinMainWindow::setupActions()
     openInNewWindow->setText(i18nc("@action:inmenu", "Open in New Window"));
     openInNewWindow->setIcon(KIcon("window-new"));
     connect(openInNewWindow, SIGNAL(triggered()), this, SLOT(openInNewWindow()));
+
+    // KLook
+    KAction* openInKLook = actionCollection()->addAction("open_in_KLook");
+    openInKLook->setText(i18nc("@action:inmenu", "Preview"));
+    openInKLook->setShortcut(Qt::Key_Space);
+    openInKLook->setIcon(KIcon("klook"));
+    openInKLook->setEnabled(false);
+    connect(openInKLook, SIGNAL(triggered()), this, SLOT(previewItem()));
 }
 
 void DolphinMainWindow::setupDockWidgets()
@@ -2130,4 +2152,43 @@ void DolphinMainWindow::UndoUiInterface::jobError(KIO::Job* job)
     }
 }
 
+void DolphinMainWindow::previewItem()
+{
+    const KFileItemList list = m_activeViewContainer->view()->selectedItems();
+    QStringList urlList;
+    foreach(KFileItem item, list)
+    {
+        urlList.append(item.url().path());
+    }
+    if (!list.isEmpty())
+    {
+        QProcess* process = new QProcess();
+        connect(process,SIGNAL(finished(int)),process,SLOT(deleteLater()));
+        process->start(QString("klook"), urlList);
+    }
+}
+
+void DolphinMainWindow::focusChanged(QWidget *old, QWidget *now)
+{
+#ifndef Q_OS_WIN
+    if (now)
+    {
+        if (QString(now->metaObject()->className()).contains("Konsole::TerminalDisplay"))
+        {
+            QAction* openInKLook = actionCollection()->action("open_in_KLook");
+            m_isFocusOnTerminal = true;
+            openInKLook->setEnabled(false);
+        }
+    }
+    if (old)
+    {
+        if (QString(old->metaObject()->className()).contains("Konsole::TerminalDisplay"))
+        {
+            QAction* openInKLook = actionCollection()->action("open_in_KLook");
+            m_isFocusOnTerminal = false;
+            openInKLook->setEnabled(true);
+        }
+    }
+#endif
+}
 #include "dolphinmainwindow.moc"
diff --git a/dolphin/src/dolphinmainwindow.h b/dolphin/src/dolphinmainwindow.h
index ab79fb0..f61f173 100644
--- a/dolphin/src/dolphinmainwindow.h
+++ b/dolphin/src/dolphinmainwindow.h
@@ -36,6 +36,7 @@
 
 typedef KIO::FileUndoManager::CommandType CommandType;
 
+class DolphinDockWidget;
 class DolphinViewActionHandler;
 class DolphinApplication;
 class DolphinSettingsDialog;
@@ -51,6 +52,7 @@ class KUrl;
 class QSplitter;
 class QToolButton;
 class QVBoxLayout;
+class Panel;
 
 /**
  * @short Main window for Dolphin.
@@ -102,6 +104,8 @@ public:
      */
     KNewFileMenu* newFileMenu() const;
 
+    void focusChanged(QWidget *old, QWidget *now);
+
 public slots:
     /**
      * Pastes the clipboard data into the currently selected folder
@@ -367,6 +371,12 @@ private slots:
     void openInNewTab();
 
     /**
+     * Opens the selected files in KLook.
+     */
+
+    void previewItem();
+
+    /**
      * Opens the selected folder in a new window.
      */
     void openInNewWindow();
@@ -588,6 +598,7 @@ private:
     QTimer* m_updateToolBarTimer;
 
     KIO::Job* m_lastHandleUrlStatJob;
+    bool m_isFocusOnTerminal;
 };
 
 inline DolphinViewContainer* DolphinMainWindow::activeViewContainer() const
